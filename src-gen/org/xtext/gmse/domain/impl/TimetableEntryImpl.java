/**
 * generated by Xtext 2.18.0
 */
package org.xtext.gmse.domain.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.gmse.domain.Artist;
import org.xtext.gmse.domain.DomainPackage;
import org.xtext.gmse.domain.Stage;
import org.xtext.gmse.domain.TimetableEntry;
import org.xtext.gmse.domain.days;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Timetable Entry</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.gmse.domain.impl.TimetableEntryImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.gmse.domain.impl.TimetableEntryImpl#getDay <em>Day</em>}</li>
 *   <li>{@link org.xtext.gmse.domain.impl.TimetableEntryImpl#getTime <em>Time</em>}</li>
 *   <li>{@link org.xtext.gmse.domain.impl.TimetableEntryImpl#getStage <em>Stage</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TimetableEntryImpl extends MinimalEObjectImpl.Container implements TimetableEntry
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected Artist name;

  /**
   * The default value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected static final days DAY_EDEFAULT = days.THURSDAY;

  /**
   * The cached value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected days day = DAY_EDEFAULT;

  /**
   * The default value of the '{@link #getTime() <em>Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTime()
   * @generated
   * @ordered
   */
  protected static final String TIME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTime() <em>Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTime()
   * @generated
   * @ordered
   */
  protected String time = TIME_EDEFAULT;

  /**
   * The cached value of the '{@link #getStage() <em>Stage</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStage()
   * @generated
   * @ordered
   */
  protected Stage stage;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TimetableEntryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DomainPackage.Literals.TIMETABLE_ENTRY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Artist getName()
  {
    if (name != null && name.eIsProxy())
    {
      InternalEObject oldName = (InternalEObject)name;
      name = (Artist)eResolveProxy(oldName);
      if (name != oldName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DomainPackage.TIMETABLE_ENTRY__NAME, oldName, name));
      }
    }
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Artist basicGetName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(Artist newName)
  {
    Artist oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainPackage.TIMETABLE_ENTRY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public days getDay()
  {
    return day;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDay(days newDay)
  {
    days oldDay = day;
    day = newDay == null ? DAY_EDEFAULT : newDay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainPackage.TIMETABLE_ENTRY__DAY, oldDay, day));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTime()
  {
    return time;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTime(String newTime)
  {
    String oldTime = time;
    time = newTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainPackage.TIMETABLE_ENTRY__TIME, oldTime, time));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Stage getStage()
  {
    if (stage != null && stage.eIsProxy())
    {
      InternalEObject oldStage = (InternalEObject)stage;
      stage = (Stage)eResolveProxy(oldStage);
      if (stage != oldStage)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DomainPackage.TIMETABLE_ENTRY__STAGE, oldStage, stage));
      }
    }
    return stage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Stage basicGetStage()
  {
    return stage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStage(Stage newStage)
  {
    Stage oldStage = stage;
    stage = newStage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DomainPackage.TIMETABLE_ENTRY__STAGE, oldStage, stage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DomainPackage.TIMETABLE_ENTRY__NAME:
        if (resolve) return getName();
        return basicGetName();
      case DomainPackage.TIMETABLE_ENTRY__DAY:
        return getDay();
      case DomainPackage.TIMETABLE_ENTRY__TIME:
        return getTime();
      case DomainPackage.TIMETABLE_ENTRY__STAGE:
        if (resolve) return getStage();
        return basicGetStage();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DomainPackage.TIMETABLE_ENTRY__NAME:
        setName((Artist)newValue);
        return;
      case DomainPackage.TIMETABLE_ENTRY__DAY:
        setDay((days)newValue);
        return;
      case DomainPackage.TIMETABLE_ENTRY__TIME:
        setTime((String)newValue);
        return;
      case DomainPackage.TIMETABLE_ENTRY__STAGE:
        setStage((Stage)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DomainPackage.TIMETABLE_ENTRY__NAME:
        setName((Artist)null);
        return;
      case DomainPackage.TIMETABLE_ENTRY__DAY:
        setDay(DAY_EDEFAULT);
        return;
      case DomainPackage.TIMETABLE_ENTRY__TIME:
        setTime(TIME_EDEFAULT);
        return;
      case DomainPackage.TIMETABLE_ENTRY__STAGE:
        setStage((Stage)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DomainPackage.TIMETABLE_ENTRY__NAME:
        return name != null;
      case DomainPackage.TIMETABLE_ENTRY__DAY:
        return day != DAY_EDEFAULT;
      case DomainPackage.TIMETABLE_ENTRY__TIME:
        return TIME_EDEFAULT == null ? time != null : !TIME_EDEFAULT.equals(time);
      case DomainPackage.TIMETABLE_ENTRY__STAGE:
        return stage != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (day: ");
    result.append(day);
    result.append(", time: ");
    result.append(time);
    result.append(')');
    return result.toString();
  }

} //TimetableEntryImpl
